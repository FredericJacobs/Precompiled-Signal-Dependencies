// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

// @@protoc_insertion_point(imports)

@class TSProtoKeyExchangeMessage;
@class TSProtoKeyExchangeMessageBuilder;
@class TSProtoPreKeyWhisperMessage;
@class TSProtoPreKeyWhisperMessageBuilder;
@class TSProtoSenderKeyDistributionMessage;
@class TSProtoSenderKeyDistributionMessageBuilder;
@class TSProtoSenderKeyMessage;
@class TSProtoSenderKeyMessageBuilder;
@class TSProtoWhisperMessage;
@class TSProtoWhisperMessageBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif


@interface WhisperTextProtocolRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface TSProtoWhisperMessage : PBGeneratedMessage {
@private
  BOOL hasRatchetKey_:1;
  BOOL hasCiphertext_:1;
  BOOL hasCounter_:1;
  BOOL hasPreviousCounter_:1;
  NSData* ratchetKey;
  NSData* ciphertext;
  UInt32 counter;
  UInt32 previousCounter;
}
- (BOOL) hasRatchetKey;
- (BOOL) hasCounter;
- (BOOL) hasPreviousCounter;
- (BOOL) hasCiphertext;
@property (readonly, strong) NSData* ratchetKey;
@property (readonly) UInt32 counter;
@property (readonly) UInt32 previousCounter;
@property (readonly, strong) NSData* ciphertext;

+ (TSProtoWhisperMessage*) defaultInstance;
- (TSProtoWhisperMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TSProtoWhisperMessageBuilder*) builder;
+ (TSProtoWhisperMessageBuilder*) builder;
+ (TSProtoWhisperMessageBuilder*) builderWithPrototype:(TSProtoWhisperMessage*) prototype;
- (TSProtoWhisperMessageBuilder*) toBuilder;

+ (TSProtoWhisperMessage*) parseFromData:(NSData*) data;
+ (TSProtoWhisperMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TSProtoWhisperMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TSProtoWhisperMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TSProtoWhisperMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TSProtoWhisperMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TSProtoWhisperMessageBuilder : PBGeneratedMessageBuilder {
@private
  TSProtoWhisperMessage* result;
}

- (TSProtoWhisperMessage*) defaultInstance;

- (TSProtoWhisperMessageBuilder*) clear;
- (TSProtoWhisperMessageBuilder*) clone;

- (TSProtoWhisperMessage*) build;
- (TSProtoWhisperMessage*) buildPartial;

- (TSProtoWhisperMessageBuilder*) mergeFrom:(TSProtoWhisperMessage*) other;
- (TSProtoWhisperMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TSProtoWhisperMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRatchetKey;
- (NSData*) ratchetKey;
- (TSProtoWhisperMessageBuilder*) setRatchetKey:(NSData*) value;
- (TSProtoWhisperMessageBuilder*) clearRatchetKey;

- (BOOL) hasCounter;
- (UInt32) counter;
- (TSProtoWhisperMessageBuilder*) setCounter:(UInt32) value;
- (TSProtoWhisperMessageBuilder*) clearCounter;

- (BOOL) hasPreviousCounter;
- (UInt32) previousCounter;
- (TSProtoWhisperMessageBuilder*) setPreviousCounter:(UInt32) value;
- (TSProtoWhisperMessageBuilder*) clearPreviousCounter;

- (BOOL) hasCiphertext;
- (NSData*) ciphertext;
- (TSProtoWhisperMessageBuilder*) setCiphertext:(NSData*) value;
- (TSProtoWhisperMessageBuilder*) clearCiphertext;
@end

@interface TSProtoPreKeyWhisperMessage : PBGeneratedMessage {
@private
  BOOL hasBaseKey_:1;
  BOOL hasIdentityKey_:1;
  BOOL hasMessage_:1;
  BOOL hasRegistrationId_:1;
  BOOL hasPreKeyId_:1;
  BOOL hasSignedPreKeyId_:1;
  NSData* baseKey;
  NSData* identityKey;
  NSData* message;
  UInt32 registrationId;
  UInt32 preKeyId;
  UInt32 signedPreKeyId;
}
- (BOOL) hasRegistrationId;
- (BOOL) hasPreKeyId;
- (BOOL) hasSignedPreKeyId;
- (BOOL) hasBaseKey;
- (BOOL) hasIdentityKey;
- (BOOL) hasMessage;
@property (readonly) UInt32 registrationId;
@property (readonly) UInt32 preKeyId;
@property (readonly) UInt32 signedPreKeyId;
@property (readonly, strong) NSData* baseKey;
@property (readonly, strong) NSData* identityKey;
@property (readonly, strong) NSData* message;

+ (TSProtoPreKeyWhisperMessage*) defaultInstance;
- (TSProtoPreKeyWhisperMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TSProtoPreKeyWhisperMessageBuilder*) builder;
+ (TSProtoPreKeyWhisperMessageBuilder*) builder;
+ (TSProtoPreKeyWhisperMessageBuilder*) builderWithPrototype:(TSProtoPreKeyWhisperMessage*) prototype;
- (TSProtoPreKeyWhisperMessageBuilder*) toBuilder;

+ (TSProtoPreKeyWhisperMessage*) parseFromData:(NSData*) data;
+ (TSProtoPreKeyWhisperMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TSProtoPreKeyWhisperMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TSProtoPreKeyWhisperMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TSProtoPreKeyWhisperMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TSProtoPreKeyWhisperMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TSProtoPreKeyWhisperMessageBuilder : PBGeneratedMessageBuilder {
@private
  TSProtoPreKeyWhisperMessage* result;
}

- (TSProtoPreKeyWhisperMessage*) defaultInstance;

- (TSProtoPreKeyWhisperMessageBuilder*) clear;
- (TSProtoPreKeyWhisperMessageBuilder*) clone;

- (TSProtoPreKeyWhisperMessage*) build;
- (TSProtoPreKeyWhisperMessage*) buildPartial;

- (TSProtoPreKeyWhisperMessageBuilder*) mergeFrom:(TSProtoPreKeyWhisperMessage*) other;
- (TSProtoPreKeyWhisperMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TSProtoPreKeyWhisperMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRegistrationId;
- (UInt32) registrationId;
- (TSProtoPreKeyWhisperMessageBuilder*) setRegistrationId:(UInt32) value;
- (TSProtoPreKeyWhisperMessageBuilder*) clearRegistrationId;

- (BOOL) hasPreKeyId;
- (UInt32) preKeyId;
- (TSProtoPreKeyWhisperMessageBuilder*) setPreKeyId:(UInt32) value;
- (TSProtoPreKeyWhisperMessageBuilder*) clearPreKeyId;

- (BOOL) hasSignedPreKeyId;
- (UInt32) signedPreKeyId;
- (TSProtoPreKeyWhisperMessageBuilder*) setSignedPreKeyId:(UInt32) value;
- (TSProtoPreKeyWhisperMessageBuilder*) clearSignedPreKeyId;

- (BOOL) hasBaseKey;
- (NSData*) baseKey;
- (TSProtoPreKeyWhisperMessageBuilder*) setBaseKey:(NSData*) value;
- (TSProtoPreKeyWhisperMessageBuilder*) clearBaseKey;

- (BOOL) hasIdentityKey;
- (NSData*) identityKey;
- (TSProtoPreKeyWhisperMessageBuilder*) setIdentityKey:(NSData*) value;
- (TSProtoPreKeyWhisperMessageBuilder*) clearIdentityKey;

- (BOOL) hasMessage;
- (NSData*) message;
- (TSProtoPreKeyWhisperMessageBuilder*) setMessage:(NSData*) value;
- (TSProtoPreKeyWhisperMessageBuilder*) clearMessage;
@end

@interface TSProtoKeyExchangeMessage : PBGeneratedMessage {
@private
  BOOL hasBaseKey_:1;
  BOOL hasRatchetKey_:1;
  BOOL hasIdentityKey_:1;
  BOOL hasBaseKeySignature_:1;
  BOOL hasId_:1;
  NSData* baseKey;
  NSData* ratchetKey;
  NSData* identityKey;
  NSData* baseKeySignature;
  UInt32 id;
}
- (BOOL) hasId;
- (BOOL) hasBaseKey;
- (BOOL) hasRatchetKey;
- (BOOL) hasIdentityKey;
- (BOOL) hasBaseKeySignature;
@property (readonly) UInt32 id;
@property (readonly, strong) NSData* baseKey;
@property (readonly, strong) NSData* ratchetKey;
@property (readonly, strong) NSData* identityKey;
@property (readonly, strong) NSData* baseKeySignature;

+ (TSProtoKeyExchangeMessage*) defaultInstance;
- (TSProtoKeyExchangeMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TSProtoKeyExchangeMessageBuilder*) builder;
+ (TSProtoKeyExchangeMessageBuilder*) builder;
+ (TSProtoKeyExchangeMessageBuilder*) builderWithPrototype:(TSProtoKeyExchangeMessage*) prototype;
- (TSProtoKeyExchangeMessageBuilder*) toBuilder;

+ (TSProtoKeyExchangeMessage*) parseFromData:(NSData*) data;
+ (TSProtoKeyExchangeMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TSProtoKeyExchangeMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TSProtoKeyExchangeMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TSProtoKeyExchangeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TSProtoKeyExchangeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TSProtoKeyExchangeMessageBuilder : PBGeneratedMessageBuilder {
@private
  TSProtoKeyExchangeMessage* result;
}

- (TSProtoKeyExchangeMessage*) defaultInstance;

- (TSProtoKeyExchangeMessageBuilder*) clear;
- (TSProtoKeyExchangeMessageBuilder*) clone;

- (TSProtoKeyExchangeMessage*) build;
- (TSProtoKeyExchangeMessage*) buildPartial;

- (TSProtoKeyExchangeMessageBuilder*) mergeFrom:(TSProtoKeyExchangeMessage*) other;
- (TSProtoKeyExchangeMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TSProtoKeyExchangeMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (UInt32) id;
- (TSProtoKeyExchangeMessageBuilder*) setId:(UInt32) value;
- (TSProtoKeyExchangeMessageBuilder*) clearId;

- (BOOL) hasBaseKey;
- (NSData*) baseKey;
- (TSProtoKeyExchangeMessageBuilder*) setBaseKey:(NSData*) value;
- (TSProtoKeyExchangeMessageBuilder*) clearBaseKey;

- (BOOL) hasRatchetKey;
- (NSData*) ratchetKey;
- (TSProtoKeyExchangeMessageBuilder*) setRatchetKey:(NSData*) value;
- (TSProtoKeyExchangeMessageBuilder*) clearRatchetKey;

- (BOOL) hasIdentityKey;
- (NSData*) identityKey;
- (TSProtoKeyExchangeMessageBuilder*) setIdentityKey:(NSData*) value;
- (TSProtoKeyExchangeMessageBuilder*) clearIdentityKey;

- (BOOL) hasBaseKeySignature;
- (NSData*) baseKeySignature;
- (TSProtoKeyExchangeMessageBuilder*) setBaseKeySignature:(NSData*) value;
- (TSProtoKeyExchangeMessageBuilder*) clearBaseKeySignature;
@end

@interface TSProtoSenderKeyMessage : PBGeneratedMessage {
@private
  BOOL hasCiphertext_:1;
  BOOL hasId_:1;
  BOOL hasIteration_:1;
  NSData* ciphertext;
  UInt32 id;
  UInt32 iteration;
}
- (BOOL) hasId;
- (BOOL) hasIteration;
- (BOOL) hasCiphertext;
@property (readonly) UInt32 id;
@property (readonly) UInt32 iteration;
@property (readonly, strong) NSData* ciphertext;

+ (TSProtoSenderKeyMessage*) defaultInstance;
- (TSProtoSenderKeyMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TSProtoSenderKeyMessageBuilder*) builder;
+ (TSProtoSenderKeyMessageBuilder*) builder;
+ (TSProtoSenderKeyMessageBuilder*) builderWithPrototype:(TSProtoSenderKeyMessage*) prototype;
- (TSProtoSenderKeyMessageBuilder*) toBuilder;

+ (TSProtoSenderKeyMessage*) parseFromData:(NSData*) data;
+ (TSProtoSenderKeyMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TSProtoSenderKeyMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TSProtoSenderKeyMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TSProtoSenderKeyMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TSProtoSenderKeyMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TSProtoSenderKeyMessageBuilder : PBGeneratedMessageBuilder {
@private
  TSProtoSenderKeyMessage* result;
}

- (TSProtoSenderKeyMessage*) defaultInstance;

- (TSProtoSenderKeyMessageBuilder*) clear;
- (TSProtoSenderKeyMessageBuilder*) clone;

- (TSProtoSenderKeyMessage*) build;
- (TSProtoSenderKeyMessage*) buildPartial;

- (TSProtoSenderKeyMessageBuilder*) mergeFrom:(TSProtoSenderKeyMessage*) other;
- (TSProtoSenderKeyMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TSProtoSenderKeyMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (UInt32) id;
- (TSProtoSenderKeyMessageBuilder*) setId:(UInt32) value;
- (TSProtoSenderKeyMessageBuilder*) clearId;

- (BOOL) hasIteration;
- (UInt32) iteration;
- (TSProtoSenderKeyMessageBuilder*) setIteration:(UInt32) value;
- (TSProtoSenderKeyMessageBuilder*) clearIteration;

- (BOOL) hasCiphertext;
- (NSData*) ciphertext;
- (TSProtoSenderKeyMessageBuilder*) setCiphertext:(NSData*) value;
- (TSProtoSenderKeyMessageBuilder*) clearCiphertext;
@end

@interface TSProtoSenderKeyDistributionMessage : PBGeneratedMessage {
@private
  BOOL hasChainKey_:1;
  BOOL hasSigningKey_:1;
  BOOL hasId_:1;
  BOOL hasIteration_:1;
  NSData* chainKey;
  NSData* signingKey;
  UInt32 id;
  UInt32 iteration;
}
- (BOOL) hasId;
- (BOOL) hasIteration;
- (BOOL) hasChainKey;
- (BOOL) hasSigningKey;
@property (readonly) UInt32 id;
@property (readonly) UInt32 iteration;
@property (readonly, strong) NSData* chainKey;
@property (readonly, strong) NSData* signingKey;

+ (TSProtoSenderKeyDistributionMessage*) defaultInstance;
- (TSProtoSenderKeyDistributionMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TSProtoSenderKeyDistributionMessageBuilder*) builder;
+ (TSProtoSenderKeyDistributionMessageBuilder*) builder;
+ (TSProtoSenderKeyDistributionMessageBuilder*) builderWithPrototype:(TSProtoSenderKeyDistributionMessage*) prototype;
- (TSProtoSenderKeyDistributionMessageBuilder*) toBuilder;

+ (TSProtoSenderKeyDistributionMessage*) parseFromData:(NSData*) data;
+ (TSProtoSenderKeyDistributionMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TSProtoSenderKeyDistributionMessage*) parseFromInputStream:(NSInputStream*) input;
+ (TSProtoSenderKeyDistributionMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TSProtoSenderKeyDistributionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TSProtoSenderKeyDistributionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TSProtoSenderKeyDistributionMessageBuilder : PBGeneratedMessageBuilder {
@private
  TSProtoSenderKeyDistributionMessage* result;
}

- (TSProtoSenderKeyDistributionMessage*) defaultInstance;

- (TSProtoSenderKeyDistributionMessageBuilder*) clear;
- (TSProtoSenderKeyDistributionMessageBuilder*) clone;

- (TSProtoSenderKeyDistributionMessage*) build;
- (TSProtoSenderKeyDistributionMessage*) buildPartial;

- (TSProtoSenderKeyDistributionMessageBuilder*) mergeFrom:(TSProtoSenderKeyDistributionMessage*) other;
- (TSProtoSenderKeyDistributionMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TSProtoSenderKeyDistributionMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (UInt32) id;
- (TSProtoSenderKeyDistributionMessageBuilder*) setId:(UInt32) value;
- (TSProtoSenderKeyDistributionMessageBuilder*) clearId;

- (BOOL) hasIteration;
- (UInt32) iteration;
- (TSProtoSenderKeyDistributionMessageBuilder*) setIteration:(UInt32) value;
- (TSProtoSenderKeyDistributionMessageBuilder*) clearIteration;

- (BOOL) hasChainKey;
- (NSData*) chainKey;
- (TSProtoSenderKeyDistributionMessageBuilder*) setChainKey:(NSData*) value;
- (TSProtoSenderKeyDistributionMessageBuilder*) clearChainKey;

- (BOOL) hasSigningKey;
- (NSData*) signingKey;
- (TSProtoSenderKeyDistributionMessageBuilder*) setSigningKey:(NSData*) value;
- (TSProtoSenderKeyDistributionMessageBuilder*) clearSigningKey;
@end


// @@protoc_insertion_point(global_scope)
